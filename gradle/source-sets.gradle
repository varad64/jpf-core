sourceSets {
    annotations {
        java.srcDirs = ["src/annotations"]
        java.outputDir = file("${buildDir}/annotations")
    }
    main {
        java.srcDirs = ["src/main"]
        java.outputDir = file("${buildDir}/main")
        compileClasspath += sourceSets.annotations.output
    }
    examples {
        java.srcDirs = ["src/examples"]
        java.outputDir = file("${buildDir}/examples")
        compileClasspath += sourceSets.main.output
    }
    classes {
        java.srcDirs = ["src/classes/gov", "src/classes/org"]
        java.outputDir = file("${buildDir}/classes")
        compileClasspath += sourceSets.main.output + sourceSets.annotations.output
    }
    modules {
        java.srcDirs = ["src/classes/modules"]
        java.outputDir = file("${buildDir}/classes")
        compileClasspath += sourceSets.classes.output + sourceSets.main.output + sourceSets.annotations.output
    }
    peers {
        java.srcDirs = ["src/peers"]
        java.outputDir = file("${buildDir}/peers")
        compileClasspath += sourceSets.main.output + sourceSets.annotations.output
    }
    test {
        java.srcDirs = ["src/tests"]
        java.outputDir = file("${buildDir}/tests")
        compileClasspath += sourceSets.annotations.output + sourceSets.classes.output + sourceSets.peers.output
        runtimeClasspath += compileClasspath
    }
}

compilePeersJava.options.compilerArgs += [
        '--add-exports', 'java.base/jdk.internal.misc=ALL-UNNAMED'
]

compileClassesJava.options.compilerArgs += [
        '--patch-module', 'java.base=' + files(sourceSets.modules.java.srcDirs).asPath + '/java.base',
        '--patch-module', 'java.logging=' + files(sourceSets.modules.java.srcDirs).asPath + '/java.logging',
        '--add-exports', 'java.base/sun.net.www.protocol.http=ALL-UNNAMED',
        '--add-reads', 'java.base=ALL-UNNAMED'
]

compileModulesJava.options.compilerArgs += [
        '--patch-module', 'java.base=' + files(sourceSets.modules.java.srcDirs).asPath + '/java.base',
        '--patch-module', 'java.logging=' + files(sourceSets.modules.java.srcDirs).asPath + '/java.logging',
        '--add-exports', 'java.base/sun.net.www.protocol.http=ALL-UNNAMED',
        '--add-reads', 'java.base=ALL-UNNAMED',
        '--module-source-path', files(sourceSets.modules.java.srcDirs).asPath
]

compileTestJava.options.compilerArgs += [
        '--add-exports', 'java.base/jdk.internal.misc=ALL-UNNAMED'
]
